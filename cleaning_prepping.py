import ray
import numpy as np

# data = {}
# data['archer_0'] = [(([[0., 0.3, 0.825, 0., -1.],
#                        [0., 0., 0., 0., -1.],
#                        [0.02762136, 0.0390625, 0., 0., -1.],
#                        [0.22097087, 0.3125, 0., 0., -1.],
#                        [0.24859223, 0.3515625, 0., 0., -1.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.],
#                        [0., -0., -0., 0., 0.]]), 0, ([[0., 0.3, 0.825, 0., -1.],
#                                                       [0., 0., 0., 0., -1.],
#                                                       [0.03695613, 0.0390625, 0.03472222, 0., -1.],
#                                                       [0.21987479, 0.3109375, -0.00277778, 0.17364818, -0.98480775],
#                                                       [0.24859223, 0.3515625, 0., 0., -1.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0.05121502, -0.00546875, -0.07222222, 0., -1.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.],
#                                                       [0., -0., -0., 0., 0.]]))]

@ray.remote
def clean_data(play_queue, cleaned_queue):

    while True:
        data = play_queue.get(block=True)
        all_cleaned = {}
        for key in data.keys():
            if key not in all_cleaned.keys():
                all_cleaned[key] = []

            player_data = data[key]
            player_cleaned = all_cleaned[key]
            for entry in player_data:
                state_list, reward, state_prime_list = entry

                state = np.concatenate(state_list)
                state_prime = np.concatenate(state_prime_list)

                player_cleaned.append((state, reward, state_prime))

        # stuff = [(key, len(all_cleaned[key])) for key in all_cleaned.keys()]
        # print(stuff)
        cleaned_queue.put(all_cleaned)